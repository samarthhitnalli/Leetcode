class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
    # Dictionary to store numbers and their indices
        seen = {}

    # Loop through the list with index and value
        for i, num in enumerate(nums):
            complement = target - num  # What number do we need to reach target?

        # Check if we've already seen the required number
            if complement in seen:
                return [seen[complement], i]  # Found the pair

        # Otherwise, store this number with its index
            seen[num] = i

    # This line will never be reached because one solution always exists
        return []